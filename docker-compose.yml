version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pm_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: project_manager
      POSTGRES_USER: pm_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pm_user -d project_manager"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pm_network

  # Backend API (Node.js + Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pm_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: project_manager
      DB_USER: pm_user
      DB_PASSWORD: ${DB_PASSWORD:-changeme123}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-this}
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-your-email@gmail.com}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-your-app-password}
      SMTP_FROM: ${SMTP_FROM:-Project Manager <noreply@projectmanager.com>}
      APP_URL: ${APP_URL:-http://localhost}
      UPLOADS_DIR: /app/uploads
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pm_network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost/api}
    container_name: pm_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - pm_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pm_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - pm_network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pm_network:
    driver: bridge
